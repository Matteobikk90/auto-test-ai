// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ─────────────────────────────
// MODELS
// ─────────────────────────────

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?    @map("email_verified")
  image         String?
  password      String?
  resetToken    String?
  resetTokenExp DateTime?
  bio           String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  Test          Test[]
  Submission    Submission[]

  @@map("users")
}

model Test {
  id          Int      @id @default(autoincrement())
  title       String
  language    String
  question    String
  prompt      String
  solution    String?
  explanation String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  submissions Submission[]

  @@map("test")
}

model Submission {
  id        Int      @id @default(autoincrement())
  code      String
  feedback  String?
  passed    Boolean?
  createdAt DateTime @default(now())
  userId    String
  testId    Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  test Test @relation(fields: [testId], references: [id], onDelete: Cascade)

  @@map("submission")
}
